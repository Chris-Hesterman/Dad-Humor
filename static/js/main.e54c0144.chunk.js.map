{"version":3,"sources":["dadSmall.png","Joke.js","JokeBoard.js","App.js","index.js"],"names":["module","exports","Joke","fillJokes","props","handleClick","e","list","target","classList","voteTotal","joke","votes","add","includes","handleVotes","jokeId","setTimeout","remove","voteIndicators","votePad","Math","ceil","color","emoji","ringColor","colorRing","border","className","onClick","style","JokeBoard","state","jokes","jokeMax","flip","jokeFade","React","createRef","getJoke","bind","collectJokes","sortJokes","fetch","method","headers","then","response","json","localStorage","storedJokes","JSON","parse","getItem","setState","setInterval","data","jokesArr","id","newJokesArr","filter","stateJoke","push","this","current","removeItem","length","map","jokeItem","sortedJokes","sort","a","b","prevState","clearInterval","setItem","stringify","jokeArr","dadJokes","key","flipId","stagger","load","ref","src","dad","alt","flipKey","spring","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e54c0144.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/dadSmall.252b4f80.png\";","import React from 'react';\nimport './Joke.css'\n\nfunction Joke(props) {\n    const handleClick = (e) => {\n        const list = e.target.classList;\n        let voteTotal = props.joke.votes;\n        \n        list.add('thumbClick');\n        if (list[1].includes('down')) {\n            voteTotal = voteTotal - 1;\n        } else {\n            voteTotal = voteTotal + 1;\n        }\n        props.handleVotes(voteTotal, props.jokeId);\n        setTimeout(() => { \n            list.remove('thumbClick');            \n        }, 250);\n    }\n\n    const voteIndicators = (votes) => {\n        const votePad = Math.ceil((votes + 10) / 3);\n        const faces = ['🤬', '😡', '😤', '🙁', '😐', '😏', '😁', '😂'];\n        const colors = ['maroon', 'red', 'orange', 'yellow', 'lime', 'seagreen', 'blue', 'purple'];\n        const color = votePad <= 0 ? 0: votePad >= 7 ? 7: votePad;\n        const face = color;\n\n        return ({ emoji: faces[face], ringColor: colors[color] });\n    }\n\n    const { joke } = props;\n    const color = voteIndicators(joke.votes).ringColor;\n    const colorRing = {\n        border: `4px solid ${color}`\n    }\n    \n    return (\n        <div className='Joke'>\n            <i onClick={handleClick} className='far fa-thumbs-down' />\n            <p className='Joke-votes' style={colorRing}>{joke.votes}</p>\n            <i onClick={handleClick} className='far fa-thumbs-up' />\n            <div className='Joke-container'>\n                <p>{joke.joke}</p>\n                <h1 className='Joke-emoji'>{voteIndicators(joke.votes).emoji}</h1>\n            </div>\n            \n        </div> \n    );\n}\n\nexport default Joke;","import React, { Component } from 'react';\nimport Joke from './Joke';\nimport { Flipper, Flipped } from 'react-flip-toolkit';\nimport './JokeBoard.css';\nimport dad from './dadSmall.png';\n\nlet fillJokes;\nclass JokeBoard extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            jokes: [],\n            jokeMax: 10,\n            flip: 'left',\n        };\n        this.jokeFade = React.createRef();\n        this.getJoke = this.getJoke.bind(this);\n        this.collectJokes = this.collectJokes.bind(this);\n        this.handleVotes = this.handleVotes.bind(this);\n        this.sortJokes = this.sortJokes.bind(this);\n        this.handleClick = this.handleClick.bind(this); \n    }\n    \n    async getJoke() {\n        return await fetch('https://icanhazdadjoke.com/', {\n            method: 'GET',\n            headers: {\n                'Accept': 'application/json'\n            }\n        }).then(response => response.json());\n    }\n\n    collectJokes() {\n        if (!localStorage.jokes) {\n            fillJokes = setInterval(() => {\n                this.getJoke().then(data => {\n                    const jokesArr = this.state.jokes;\n                    const joke = {\n                        votes: 0,\n                        joke: data.joke,\n                        id: data.id \n                    }\n                    const newJokesArr = jokesArr.filter(stateJoke => {\n                        return stateJoke.id !== joke.id;\n                    });\n                    newJokesArr.push(joke);\n                    this.setState({ jokes: newJokesArr });\n                });\n            }, 140);\n        } else {\n            let storedJokes = JSON.parse(localStorage.getItem('jokes'));\n            setTimeout(() => {\n                this.setState({ jokes: storedJokes });\n            }, 1800);  \n        }\n    }\n\n    handleClick() {\n        this.jokeFade.current.classList.add('JokeBoard-fadeOut');\n        setTimeout(() => {\n            this.setState({ jokes: [] });\n            localStorage.removeItem('jokes');\n            this.collectJokes();\n            \n        }, 700);  \n    }\n\n    handleVotes(votes, id) {\n        let jokesArr = this.state.jokes;\n        \n        jokesArr.length = this.state.jokeMax;\n        jokesArr = jokesArr.map(jokeItem => {\n                if (jokeItem.id === id) {\n                    return {\n                        votes: votes,\n                        joke: jokeItem.joke,\n                        id: jokeItem.id\n                    }\n                } else {\n                    return jokeItem\n                }\n            });\n        this.setState({ jokes: jokesArr });\n        setTimeout(() => {\n            this.sortJokes();\n        }, 120);\n    }\n\n    sortJokes() {\n        const sortedJokes = this.state.jokes;\n        sortedJokes.sort((a, b) => {\n            return b.votes - a.votes;\n        });\n        this.setState(prevState => {\n            return { jokes: sortedJokes, flip: !prevState.flip };\n        });\n    }\n\n    componentDidMount() {\n        this.collectJokes(); \n    }\n\n    componentDidUpdate() {\n        if (this.state.jokes.length >= this.state.jokeMax) {\n            clearInterval(fillJokes);\n            localStorage.setItem('jokes', JSON.stringify(this.state.jokes));\n        } \n    }\n\n    render() {\n        const jokeArr = this.state.jokes;\n        jokeArr.length = jokeArr.length >= 10 ? 10: jokeArr.length;\n        let dadJokes = jokeArr.length >= 10 ? jokeArr.map(joke => {\n                return (\n                    <Flipped key={joke.id} flipId={joke.id} stagger={true}>\n                        <li>\n                            <Joke joke={joke} jokeId={joke.id} handleVotes={this.handleVotes} />\n                        </li>\n                    </Flipped>\n                )\n            }): false;\n        const load = <i className='fas fa-circle-notch'></i>\n         \n        return dadJokes ? (\n            <div className={`JokeBoard-container `} ref={this.jokeFade}>\n                <div className='JokeBoard-side'>\n                    <h1 className='Title' >Dad Humor!</h1>\n                    <img src={dad} alt='generic dad'/>\n                    <button className='JokeBoard-new' onClick={this.handleClick}>Get New Jokes</button>\n                </div>\n                <div className='JokeBoard'>\n                    <Flipper flipKey={this.state.flip} spring='wobbly' className='JokeBoard-list'>\n                        <ol>{dadJokes}</ol>\n                    </Flipper>       \n                </div>\n            </div>    \n        )\n        : load;\n    }\n}\n\nexport default JokeBoard;","import React from 'react';\nimport JokeBoard from './JokeBoard';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <JokeBoard />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}